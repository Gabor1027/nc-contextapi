{"version":3,"sources":["store.js","Components/Header/HeaderPresenter.js","Components/Header/index.js","Components/Header/HeaderContainer.js","Components/Notification/NotificationPresenter.js","Components/Notification/index.js","Components/Notification/NotificationContainer.js","Components/App/AppPresenter.js","Components/App/index.js","Components/App/AppContainer.js","typography.js","index.js"],"names":["Store","React","createContext","Header","styled","header","HeaderIcon","span","Number","HeaderPresenter","full","justifyBetween","alignCenter","name","Consumer","store","notifications","unseen","Object","keys","forEach","key","seen","push","length","getUnseen","HeaderContainer","state","this","Component","Notification","div","props","Title","Button","button","success","danger","NotificationPresenter","id","text","onClick","seeNotification","deleteNotification","NotificationContainer","AppPresenter","column","map","AppContainer","_deleteNotification","setState","currentState","_seeNotification","1","2","3","Provider","value","Typography","googleFonts","styles","headerFontFamily","bodyFontFamily","includeNormalize","injectStyles","GlobalStyle","createGlobalStyle","reset","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.f471ae97.chunk.js","sourcesContent":["import React from \"react\";\nconst Store = React.createContext(null);\nexport default Store;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Flex, { FlexItem } from \"styled-flex-component\";\nimport FontAwesome from \"react-fontawesome\";\nimport Store from \"store\";\n\nconst Header = styled.header`\n  height: 100px;\n  background-color: #ecf0f1;\n  padding: 0 40px;\n  margin-bottom: 30px;\n`;\n\nconst HeaderIcon = styled.span`\n  width: 40px;\n  height: 40px;\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  border-radius: 50%;\n  color: white;\n  background-color: #3498db;\n  margin-right: 30px;\n  cursor: pointer;\n  box-shadow: 0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08);\n  transition: all 0.2s ease-out;\n  position: relative;\n  &:hover {\n    transform: translateY(-1px);\n    box-shadow: 0 7px 14px rgba(50, 50, 93, 0.1), 0 3px 6px rgba(0, 0, 0, 0.08);\n  }\n`;\n\nconst Number = styled.span`\n  height: 30px;\n  width: 30px;\n  border-radius: 50%;\n  background-color: #8e44ad;\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  left: 25px;\n  top: -10px;\n`;\n\nconst getUnseen = notifications => {\n  let unseen = [];\n  Object.keys(notifications).forEach(key => {\n    if (!notifications[key].seen) {\n      return unseen.push(notifications[key]);\n    }\n  });\n  return unseen.length;\n};\n\nconst HeaderPresenter = () => (\n  <Header>\n    <Flex full justifyBetween alignCenter>\n      <FlexItem>\n        <h3>Antiredux</h3>\n      </FlexItem>\n      <FlexItem>\n        <Flex>\n          <HeaderIcon>\n            <FontAwesome name=\"user\" />\n          </HeaderIcon>\n          <HeaderIcon>\n            <FontAwesome name=\"cog\" />\n          </HeaderIcon>\n          <HeaderIcon>\n            <FontAwesome name=\"bell\" />\n            <Number>\n              <Store.Consumer>\n                {store => getUnseen(store.notifications)}\n              </Store.Consumer>\n            </Number>\n          </HeaderIcon>\n        </Flex>\n      </FlexItem>\n    </Flex>\n  </Header>\n);\n\nexport default HeaderPresenter;\n","import HeaderContainer from \"./HeaderContainer\";\nexport default HeaderContainer;\n","import React, { Component } from \"react\";\nimport HeaderPresenter from \"./HeaderPresenter\";\n\nclass HeaderContainer extends Component {\n  static propTypes = {};\n  state = {};\n  render() {\n    return <HeaderPresenter {...this.state} />;\n  }\n}\n\nexport default HeaderContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Flex, { FlexItem } from \"styled-flex-component\";\nimport FontAwesome from \"react-fontawesome\";\nimport Store from \"store\";\n\nconst Notification = styled.div`\n  background-color: white;\n  box-shadow: 0 7px 14px rgba(50, 50, 93, 0.1), 0 3px 6px rgba(0, 0, 0, 0.08);\n  width: 80%;\n  padding: 20px;\n  border-radius: 15px;\n  margin-bottom: 15px;\n  box-sizing: border-box;\n  border: 2px solid ${props => (props.seen ? \"transparent\" : \"#f1c40f\")};\n`;\n\nconst Title = styled.span`\n  font-weight: 600;\n`;\n\nconst Button = styled.button`\n  height: 40px;\n  width: 40px;\n  border-radius: 50%;\n  border: 0;\n  color: white;\n  font-size: 16px;\n  cursor: pointer;\n  background-color: ${props => {\n    if (props.seen) {\n      return \"#7f8c8d\";\n    } else if (props.success) {\n      return \"#2ecc71\";\n    } else if (props.danger) {\n      return \"#e74c3c\";\n    }\n  }};\n  box-shadow: 0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08);\n  transition: all 0.2s ease-out;\n  &:hover {\n    transform: translateY(-1px);\n    box-shadow: 0 7px 14px rgba(50, 50, 93, 0.1), 0 3px 6px rgba(0, 0, 0, 0.08);\n  }\n  &:active,\n  &:focus {\n    outline: none;\n  }\n  &:active {\n    transform: translateY(1px);\n  }\n`;\n\nconst NotificationPresenter = ({ id, text, seen }) => (\n  <Notification seen={seen}>\n    <Flex alignCenter justifyBetween>\n      <Title>{text}</Title>\n      <FlexItem>\n        <>\n          <Store.Consumer>\n            {store => (\n              <>\n                <Button\n                  success\n                  seen={seen}\n                  onClick={() => store.seeNotification(id)}\n                >\n                  <FontAwesome name=\"check\" />\n                </Button>\n                <Button\n                  danger\n                  seen={seen}\n                  onClick={() => store.deleteNotification(id)}\n                >\n                  <FontAwesome name=\"times\" />\n                </Button>\n              </>\n            )}\n          </Store.Consumer>\n        </>\n      </FlexItem>\n    </Flex>\n  </Notification>\n);\n\nNotificationPresenter.propTypes = {\n  text: PropTypes.string.isRequired,\n  seen: PropTypes.bool.isRequired,\n  id: PropTypes.number.isRequired\n};\n\nexport default NotificationPresenter;\n","import NotificationContainer from \"./NotificationContainer\";\nexport default NotificationContainer;\n","import React, { Component } from \"react\";\nimport NotificationPresenter from \"./NotificationPresenter\";\n\nclass NotificationContainer extends Component {\n  static propTypes = {};\n  state = {};\n  render() {\n    return <NotificationPresenter {...this.props} {...this.state} />;\n  }\n}\n\nexport default NotificationContainer;","import React, { Fragment } from \"react\";\nimport Header from \"Components/Header\";\nimport Flex from \"styled-flex-component\";\nimport Notification from \"Components/Notification\";\nimport Store from \"store\";\n\nconst AppPresenter = () => (\n  <Fragment>\n    <Header />\n    <Flex alignCenter full column>\n      <Store.Consumer>\n        {store => {\n          return Object.keys(store.notifications).map(key => (\n            <Notification\n              key={store.notifications[key].id}\n              id={store.notifications[key].id}\n              text={store.notifications[key].text}\n              seen={store.notifications[key].seen}\n            />\n          ));\n        }}\n      </Store.Consumer>\n    </Flex>\n  </Fragment>\n);\n\nexport default AppPresenter;\n","import AppContainer from \"./AppContainer\";\nexport default AppContainer;\n","import React, { Component } from \"react\";\nimport AppPresenter from \"./AppPresenter\";\nimport Store from \"store\";\n\nclass AppContainer extends Component {\n  constructor(props) {\n    super(props);\n    this._deleteNotification = id => {\n      this.setState(currentState => {\n        const newState = delete currentState.notifications[id];\n        return newState;\n      });\n    };\n    this._seeNotification = id => {\n      this.setState(currentState => {\n        return {\n          ...currentState,\n          notifications: {\n            ...currentState.notifications,\n            [id]: {\n              ...currentState.notifications[id],\n              seen: true\n            }\n          }\n        };\n      });\n    };\n    this.state = {\n      notifications: {\n        1: {\n          id: 1,\n          text: \"Something\",\n          seen: false\n        },\n        2: {\n          id: 2,\n          text: \"Something else\",\n          seen: false\n        },\n        3: {\n          id: 3,\n          text: \"Something else but different\",\n          seen: false\n        }\n      },\n      deleteNotification: this._deleteNotification,\n      seeNotification: this._seeNotification\n    };\n  }\n  render() {\n    return (\n      <Store.Provider value={this.state}>\n        <AppPresenter />\n      </Store.Provider>\n    );\n  }\n}\n\nexport default AppContainer;\n","import Typography from \"typography\";\n\nconst typography = new Typography({\n  googleFonts: [\n    {\n      name: \"Nunito\",\n      styles: [\"400\", \"600\"]\n    },\n    {\n      name: \"Open Sans\",\n      styles: [\"400\"]\n    }\n  ],\n  headerFontFamily: [\n    \"Nunito\",\n    \"Helvetica Neue\",\n    \"Segoe UI\",\n    \"Helvetica\",\n    \"Arial\",\n    \"sans-serif\"\n  ],\n  bodyFontFamily: [\n    \"Open Sans\",\n    \"Helvetica Neue\",\n    \"Segoe UI\",\n    \"Helvetica\",\n    \"Arial\",\n    \"sans-serif\"\n  ],\n  includeNormalize: false\n});\n\ntypography.injectStyles();\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\nimport { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\nimport \"./typography\";\n\nconst GlobalStyle = createGlobalStyle`\n${reset};\nbody{\n    background-color:#ecf0f1;\n}`;\n\nReactDOM.render(\n  <>\n    <GlobalStyle />\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}